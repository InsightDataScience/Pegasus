#!/bin/bash

ALLUXIO_VER=1.0.0
CASSANDRA_VER=3.5
ELASTICSEARCH_VER=2.3.3
FLINK_VER=1.0.0
FLINK_HADOOP_VER=27
FLINK_SCALA_VER=2.10
HADOOP_VER=2.7.2
HBASE_VER=1.1.5
HIVE_VER=1.2.1
KAFKA_VER=0.9.0.1
KAFKA_SCALA_VER=2.10
KIBANA_VER=4.5.1
PIG_VER=0.15.0
PRESTO_VER=0.147
REDIS_VER=3.0.6
SPARK_VER=1.6.1
SPARK_HADOOP_VER=2.6
STORM_VER=1.0.1
ZOOKEEPER_VER=3.4.6

ALLUXIO_URL=http://alluxio.org/downloads/files/${ALLUXIO_VER}/alluxio-${ALLUXIO_VER}-bin.tar.gz
CASSANDRA_URL=http://www.us.apache.org/dist/cassandra/$CASSANDRA_VER/apache-cassandra-$CASSANDRA_VER-bin.tar.gz
ELASTICSEARCH_URL=https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-$ELASTICSEARCH_VER.tar.gz
FLINK_URL=http://www.us.apache.org/dist/flink/flink-$FLINK_VER/flink-$FLINK_VER-bin-hadoop$FLINK_HADOOP_VER-scala_$FLINK_SCALA_VER.tgz
HADOOP_URL=http://www.us.apache.org/dist/hadoop/core/hadoop-$HADOOP_VER/hadoop-$HADOOP_VER.tar.gz
HBASE_URL=http://www.webhostingreviewjam.com/mirror/apache/hbase/$HBASE_VER/hbase-$HBASE_VER-bin.tar.gz
HIVE_URL=http://www.us.apache.org/dist/hive/hive-$HIVE_VER/apache-hive-$HIVE_VER-bin.tar.gz
KAFKA_URL=http://www.us.apache.org/dist/kafka/$KAFKA_VER/kafka_$KAFKA_SCALA_VER-$KAFKA_VER.tgz
KIBANA_URL=https://download.elastic.co/kibana/kibana/kibana-$KIBANA_VER-linux-x64.tar.gz
OPSCENTER_URL=http://downloads.datastax.com/community/opscenter.tar.gz
PIG_URL=http://www-us.apache.org/dist/pig/pig-$PIG_VER/pig-$PIG_VER.tar.gz
PRESTO_URL=https://repo1.maven.org/maven2/com/facebook/presto/presto-server/$PRESTO_VER/presto-server-$PRESTO_VER.tar.gz
REDIS_URL=http://download.redis.io/releases/redis-$REDIS_VER.tar.gz
SPARK_URL=http://www.us.apache.org/dist/spark/spark-$SPARK_VER/spark-$SPARK_VER-bin-hadoop$SPARK_HADOOP_VER.tgz
STORM_URL=http://www.us.apache.org/dist/storm/apache-storm-$STORM_VER/apache-storm-$STORM_VER.tar.gz
ZOOKEEPER_URL=http://www.us.apache.org/dist/zookeeper/zookeeper-$ZOOKEEPER_VER/zookeeper-$ZOOKEEPER_VER.tar.gz

cd $(dirname "${BASH_SOURCE}")

if [ "$#" -ne 1 ]; then
  echo "Provide technology to download!"
  exit 1
fi

TECHNOLOGY=$1
TECHNOLOGY_HOME=$(echo $(echo $TECHNOLOGY | tr [a-z] [A-Z])_HOME)
TECHNOLOGY_URL=$(eval "echo \$$(echo $TECHNOLOGY | tr [a-z] [A-Z])_URL")

check_folder () {
  if [ -d /usr/local/$TECHNOLOGY ]; then
    echo "$TECHNOLOGY installed."
  else
    echo "$TECHNOLOGY missing."
    echo "installing $TECHNOLOGY ..."
    curl_tech
  fi
}

curl_tech () {
  curl -sL $TECHNOLOGY_URL | gunzip | sudo tar xv -C /usr/local >> ~/peg_log.txt
  if [ -d /usr/local/*${TECHNOLOGY}* ]; then
    sudo mv /usr/local/*$TECHNOLOGY* /usr/local/$TECHNOLOGY
    echo "export $TECHNOLOGY_HOME=/usr/local/$TECHNOLOGY" | cat >> ~/.profile
    echo -e "export PATH=\$PATH:\$$TECHNOLOGY_HOME/bin\n" | cat >> ~/.profile
    sudo chown -R $USER /usr/local/$TECHNOLOGY
    eval "echo \$$(echo $TECHNOLOGY | tr [a-z] [A-Z])_VER" >> /usr/local/$TECHNOLOGY/tech_ver.txt
  fi
}

check_folder

